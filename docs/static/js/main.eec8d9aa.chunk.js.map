{"version":3,"sources":["components/Filter.js","components/CharacterList.js","components/CharacterCard.js","App.js","services/data.js","index.js"],"names":["Filter","_this$props","this","props","changeInput","changeSelect","react_default","a","createElement","className","htmlFor","type","name","id","onChange","placeholder","value","React","Component","CharacterList","characters","filterName","filterHouse","filter","item","toUpperCase","includes","house","map","key","src","image","alt","concat","react_router_dom","to","CharacterCard","reset","newData","param","match","params","Fragment","changeColor","houseLogo","dateOfBirth","patronus","alive","role","aria-label","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleInput","bind","assertThisInitialized","resetFilters","handleSelect","_this2","fetch","then","res","json","data","newCharacters","character","index","objectSpread","setState","fetchNewReasons","event","trigger","currentTarget","_this3","_this$state","react_router","exact","path","render","src_components_Filter","src_components_CharacterList","parameter","components_CharacterCard","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.eec8d9aa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Filter.scss';\n\nclass Filter extends React.Component{\n    render(){\n        const {changeInput, changeSelect} = this.props;\n        return(\n            <div className=\"search__section\">\n                <div className=\"search__container\">\n                    <label className =\"label__input\" htmlFor=\"filter\">Busca tu personaje favorito de la saga</label>\n                    <div className=\"inner-addon right-addon\">\n                        <i className=\"glyphicon glyphicon-search fas fa-search\"></i>\n                        <input type=\"text\" name=\"filter__name\" id=\"filter\" className=\"seacrh__input\" onChange={changeInput} placeholder=\"intrduce aquí el nombre\" />\n                    </div>\n                     <label className=\"label__select\" htmlFor=\"house__select\">Elige la casa que más te guste</label>\n                    <select name=\"\" id=\"filter__select\" onChange={changeSelect} >\n                        <option value=\"all\">Todo</option>\n                        <option value=\"Gryffindor\">Gyiffindor</option>\n                        <option value=\"Slytherin\">Slytherin</option>\n                        <option value=\"Hufflepuff\">Hufflepuff</option>\n                        <option value=\"Ravenclaw\">Ravenclaw</option>\n                    </select>   \n                </div>           \n            </div>\n        );\n    }\n}\n\nFilter.propTypes = {\n    changeInput: PropTypes.func\n  };\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport './CharacterList.scss';\n\nclass CharacterList extends React.Component{\n    render(){\n        const {characters, filterName, filterHouse} = this.props;\n        return(\n            <div className=\"main__container\">\n                <ul className=\"cards__container\">\n                    {characters\n                    .filter(item => item.name.toUpperCase().includes(filterName.toUpperCase()))\n                    .filter(item => filterHouse === 'all' ? item : item.house === filterHouse)\n                    .map(item => \n                        <li className=\"character__card\" key={item.id}>\n                            <h2 className=\"character__name__list\">{item.name}</h2>\n                            <img src={item.image} alt={`imagen ${item.name}`} className=\"character__image\"/>\n                            <p className=\"character__house\">{item.house}</p> \n                        <Link className=\"more__info\" to={`/detail/${item.id}`}>Más info de {item.name} <i className=\"fas fa-chevron-right\"></i></Link>  \n                        </li>\n                    )}\n                </ul>\n            </div>\n        );\n    }\n}\n\nCharacterList.propTypes = {\n    characters: PropTypes.array,\n    filterName: PropTypes.string,\n  };\n\nexport default CharacterList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport './CharacterCards.scss';\n\nclass CharacterCard extends React.Component{\n\n    houseLogo(house) {\n        if(house === 'Gryffindor'){\n            return 'https://newvitruvian.com/images250_/gryffindor-transparent-hogwarts-4.png';\n        } else if(house === 'Slytherin' ){ \n            return 'https://newvitruvian.com/images1280_/slytherin-vector-hogwarts-houses-5.png';\n        } else if(house === 'Hufflepuff'){\n            return 'https://vignette.wikia.nocookie.net/harrypotter/images/0/06/Hufflepuff_ClearBG.png/revision/latest?cb=20161020182518';\n        } else if (house === 'Ravenclaw') {\n            return 'https://i.pinimg.com/originals/55/02/b8/5502b8a40b5eac56a8a95efebe94c508.png';\n        } else {\n            return 'https://i.pinimg.com/originals/d7/2d/a9/d72da962ce4bb9b7e7370fd0c7834fdd.png';\n        }\n    }\n\n    changeColor(house){\n        if(house === 'Gryffindor'){\n            return 'gryffindor';\n        } else if(house === 'Slytherin') {\n            return 'slytherin';\n        } else if(house === 'Hufflepuff') {\n            return 'hufflepuff';\n        } else if (house === 'Ravenclaw') {\n            return 'ravenclaw';\n        } else {\n            return '';\n        }\n    }\n\n    componentWillMount(){\n        this.props.reset();\n    }\n\n    render(){\n        const {characters} = this.props;\n        const newId = this.props.param.match.params.id;\n        // vero preguntas corchetes\n        const newData = characters[newId];\n        return(\n            <React.Fragment>\n                <div className=\"search__section\">\n                    <div className=\"search__container\">\n                        <Link className=\"back__to\" to=\"/\"><i className=\"fas fa-chevron-left\"></i> Volver al buscador </Link>\n                    </div>\n                </div>\n                \n                {newData ?\n                    <div className=\"container__detail\">\n                        <div className={`main__photo ${this.changeColor(newData.house)}`}>\n                            <img src={newData.image} alt=\"foto personaje\" className=\"character__image\"/>\n                        </div>     \n                        <div className=\"main__info\">\n                            <ul className=\"character__detail__container\">\n                                <li className=\"name__house__container\">\n                                    <h2 className=\"character__name\">{newData.name}</h2>\n                                    <img className=\"house__logo\"src={this.houseLogo(newData.house)} alt=\"escudo-griffindor\"/>\n                                </li>\n                                <li>\n                                    <p className=\"character__house\">{`Casa: ${newData.house}`}</p> \n                                </li>\n                                <li>\n                                    <p className=\"character__birth\">{`Año de nacimiento: ${newData.dateOfBirth}`}</p>   \n                                </li>\n                                <li>\n                                    <p className=\"character__patronus\">{`Patronus: ${newData.patronus}`}</p>\n                                </li>\n                                <li>\n                                    {newData.alive ? \n                                        <p>¡Sigue vivo! <span role=\"img\" aria-label=\"emoticono sonriente estado vivo personaje\">😀</span></p> \n                                        :\n                                        <p>Muerto <span role=\"img\" aria-label=\"emoticono calavera estado muerto personaje\">☠️ </span></p> }\n                                </li>\n                            </ul>\n                        </div>                   \n                    </div>\n                    :\n                    <p>No hay datos disponibles</p>\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nCharacterCard.propTypes = {\n    characters: PropTypes.array\n  };\n\nexport default CharacterCard;","import React from 'react';\nimport './App.scss';\nimport {data} from './services/data';\nimport Filter from './components/Filter';\nimport CharacterList from './components/CharacterList';\nimport CharacterCard from './components/CharacterCard';\nimport {Route, Switch } from 'react-router-dom';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state= {\n      characters: [],\n      filterName: '',\n      filterHouse: 'all'\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.resetFilters = this.resetFilters.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n  \n  fetchNewReasons() {\n    data()\n      .then(data => {\n        const newCharacters = data.map((character, index) => {\n          return{...character, id: index};\n        })\n        this.setState({\n          characters: newCharacters\n        })\n      });\n  }\n\n  componentDidMount(){\n    this.fetchNewReasons();\n  }\n\n  handleInput(event){\n    const trigger = event.currentTarget.value;\n    this.setState({\n      filterName: trigger\n    });\n  }\n\n  handleSelect(event){\n    const trigger = event.currentTarget.value;\n    this.setState({\n      filterHouse: trigger\n    });\n  }\n\n  resetFilters() {\n    this.setState({\n      filterName: '',\n      filterHouse: 'all'\n    });\n  }\n\n  render(){\n    const {characters, filterName, filterHouse } = this.state;\n      return (\n        <div className=\"App\">\n          <header className=\"header\">\n            <div className=\"header__container\">\n              <div className=\"title__container\">\n                <h1 className=\"main_title\"><img src=\"https://www.stickpng.com/assets/images/580b57fbd9996e24bc43bd6a.png\" alt=\"logotipo Harry Potter\"/></h1>\n              </div>\n              <div className=\"img__contain\"></div>\n            </div>           \n          </header>\n          <main className=\"main\">\n              <Switch>\n              <Route exact path=\"/\" render={() =>\n                <React.Fragment>\n                    <Filter \n                      changeInput={this.handleInput}\n                      changeSelect={this.handleSelect}\n                    />\n                    <CharacterList \n                      characters={characters} \n                      filterName={filterName}\n                      filterHouse= {filterHouse}\n                    />           \n                </React.Fragment>\n              }  \n              />\n              <Route path=\"/detail/:id\" render={parameter => \n                <CharacterCard \n                  param={parameter}\n                  characters={characters} \n                  reset={this.resetFilters} \n                />\n              }  />\n\n              </Switch>\n          </main>\n          <footer className=\"footer\"><small>©2019. Marta Sobrino</small></footer>\n        </div>\n      );\n    }\n  }  \n\nexport default App;\n","const ENDPOINT = 'https://hp-api.herokuapp.com/api/characters';\n\nconst data = () => fetch(ENDPOINT).then(res => res.json())\n\nexport {data};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter> , document.getElementById('root'));"],"sourceRoot":""}